#!/usr/bin/env node

var commander = require('commander');
var lib = require('../lib.js');

commander
	.option('-p, --public <folder>', 'location of public folder relative to root', 'public')	
	.option('-l, --libs <folder>', 'comma seperated list of file paths or folders containing libraries relative to public folder', list, ['libs'])
	.option('-t, --tests <folder>', 'comma seperated list of file paths or folders containing tests relative to public folder', list, ['tests'])
	.option('-s, --scripts <folder>', 'comma seperated list of file paths or folders containing scripts to be tested relative to public folder', list, ['javascripts'])
	.option('-a, --advanced', 'flag indicating if advanced options must be used. When this flag is used ---opts is mandatory.')
	.option('-ao, --opts [public1:libs1:scripts1:tests1#public2:libs2:scripts2:tests2]', 'advanced options may be used in case the application has multiple public folders')
	.option('-o, --port <port>', 'port for uiunit webserver', '3000')
	.option('-r, --reports <folder>', 'location of reports folder relative to public folder', 'reports');

commander
	.command('report')
	.action(function () {
		var advanced = commander.advanced;
		var public = commander['public'];		
		var libs = commander.libs;
		var scripts = commander.scripts;
		var tests = commander.tests;
		var reports = commander.reports;		
		var opts = commander.opts;

		if (advanced && !opts) {
			throw 'Please specify --opts';
		}

		var folders = !advanced ? [{
			"public": public,
			"libs": libs,
			"scripts": scripts,
			"tests": tests,			
		}] : parseAdvancedOpts(opts);

		lib.generateTestFile({
			instrument: true,
			folders: folders
		});

		lib.generateReports({
			folders: folders,
			"reports": reports,
			port: commander.port		
		});
	});


commander
	.command('test')
	.action(function () {
		var advanced = commander.advanced;
		var public = commander['public'];		
		var libs = commander.libs;
		var scripts = commander.scripts;
		var tests = commander.tests;
		var reports = commander.reports;		
		var opts = commander.opts;

		if (advanced && !opts) {
			throw 'Please specify --opts';
		}

		var folders = !advanced ? [{
			"public": public,
			"libs": libs,
			"scripts": scripts,
			"tests": tests,			
		}] : parseAdvancedOpts(opts);

		lib.generateTestFile({
			folders: folders
		});

		lib.createServer({
			folders: folders,
			port: commander.port,
			callback: function () {
				require('open')('http://localhost:' + commander.port + '/index.html');
			}
		});
	});

commander
	.parse(process.argv);

function list(val) {
	return val.split(',');
}

function parseAdvancedOpts(opts) {
	var result = [];

	var optArr = opts.split('#');
	optArr.forEach(function (opt) {
		var argArr = opt.split(':');
		result.push({
			public: argArr[0],
			libs: argArr[1].split(',').filter(empty),
			scripts: argArr[2].split(',').filter(empty),
			tests: argArr[3].split(',').filter(empty)			
		});
	});

	return result;
}

function empty(e) {
	return !!e.trim();
}