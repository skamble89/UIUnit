#!/usr/bin/env node

var commander = require('commander');
var lib = require('../lib.js');

commander
	.option('-b, --baseurl <url>', 'base url of web app', 'http://localhost:3000')
	.option('-p, --public <folder>', 'location of public folder relative to root', 'public')
	.option('-l, --libs <folder>', 'comma seperated list of file paths or folders containing libraries relative to public folder', list, [ 'libs' ])
	.option('-t, --tests <folder>', 'comma seperated list of file paths or folders containing tests relative to public folder', list, [ 'tests' ])
	.option('-s, --scripts <folder>', 'comma seperated list of file paths or folders containing scripts to be tested relative to public folder', list, [ 'javascripts' ])
	.option('-r, --reports <folder>', 'location of reports folder relative to public folder', 'reports');

commander
	.command('report')
	.action(function(){
		var public = commander['public'];
		var libs = commander.libs;
		var scripts = commander.scripts;
		var tests = commander.tests;
		var reports = commander.reports;
		var baseurl = commander.baseurl;

		lib.generateReports({
			"public": public,
			"libs": libs,
			"scripts": scripts,
			"tests": tests,
			"reports": reports,
			"baseurl": baseurl
		});
	});


commander
	.command('test')
	.action(function(){
		var public = commander['public'];
		var libs = commander.libs;
		var scripts = commander.scripts;
		var tests = commander.tests;
		var reports = commander.reports;
		var baseurl = commander.baseurl;

		lib.generateTestFile({
			instrument: true,
			folders: {
				"public": public,
				"libs": libs,
				"scripts": scripts,
				"tests": tests,
			}
		});

		require('open')(baseurl + '/temp/index.html');
	});

commander
	.parse(process.argv);

function list(val) {
  return val.split(',');
}